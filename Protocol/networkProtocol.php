1.RPC（Remote Procedure Call Protocol）
2.局域网（Local Area Network，LAN）
3.中间件 middleware
4.事务处理监控（Transaction processing monitors）
5.负载均衡
6.堆栈指针 ： 堆栈主要用来保存临时数据，局部变量和中断/调用子程序程序的返回地址
7.相对虚拟地址（RVA Relative Virual Address）=虚拟地址（VA）-基址（ImageBase）
8.网络带宽是指在单位时间（一般指的是1秒钟）内能传输的数据量
9.以太网(Ethernet)
10.面向连接的服务（TCP）和无连接的服务(UDP)。
    TCP：传输控制协议，当传输出现错误时能自动予以纠正；
    UDP：(User Datagram Protocol)用户数据包协议，当传输出现错误时会将错误信息丢弃
11.
    寻址->建立连接->释放连接->流量控制和缓冲区管理->多路复用->崩溃恢复
12.
    TCP/IP、
    NetBEUI、
    DHCP、
    FTP:FileTransferProtocol
13.OSI （开放系统互联(Open System Interconnection) 网络体系结构
    分别是物理层、: 数据的单位称为比特（bit）
                    物理层的主要设备：中继器、集线器、适配器
                    物理接口的4个特性是机械特性、电气特性、功能特性与规程特性
      数据链路层、：该层的作用包括：物理地址寻址、数据的成帧、流量控制、数据的检错、重发等。
                    数据的单位称为帧 Frame
                    主要设备：二层交换机、网桥
          网络层、：地址解析和路由是3层的重要目的。网络层还可以实现拥塞控制、网际互连等功能
                    数据的单位称为数据包（packet）
                    主要设备：路由器
          传输层(Transport layer):第4层为上层提供端到端（最终用户到最终用户）的透明的、
                                可靠的数据传输服务,屏蔽了通信传输系统的具体细节
                    数据单元：
                            TCP:段（segments）;UDP：数据报（datagrams）
          会话层、：会话层不参与具体的传输，它提供包括访问验证和会话管理在内的建立和维护应用之间通信的机制。
                    数据Data
          表示层 ：将欲交换的数据从适合于某一用户的抽象语法，
                    转换为适合于OSI系统内部使用的传送语法。即提供格式化的表示和转换数据服务。
                    数据的压缩和解压缩， 加密和解密等工作都由表示层负责。
          应用层。为操作系统或网络应用程序提供访问网络服务的接口。
                    用用层协议：Telnet、FTP、HTTP、SNMP
14.TCP/IP
    TCP/IP模型实际上是OSI模型的一个浓缩版本，它只有四个层次：
    1.应用层，对应着OSI的应用层、表示层、会话层
    2.传输层，对应着OSI的传输层
    3.网络层，对应着OSI的网络层
    4.网络接口层，对应着OSI的数据链路层和物理层
15.简单网络管理协议（SNMP）
    1.含一个应用层协议（application layer protocol）、
        数据库模型（database schema）和一组资源对象。
16.Socket
    socket本质是编程接口(API)，对TCP/IP的封装
    服务器监听，客户端请求，连接确认
17.三次握手
    1.建立连接时，客户端发送syn包（syn=j）到服务器，并进入SYN_SENT状态，等待服务器确认
    2.第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；
    3.客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），
        此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。
18.关闭TCP连接：改进的三次握手
    第一步，当主机A的应用程序通知TCP数据已经发送完毕时，TCP向主机B发送一个带有FIN附加标记的报文段（FIN表示英文finish）。
    第二步，主机B收到这个FIN报文段之后，并不立即用FIN报文段回复主机A，而是先向主机A发送一个确认序号ACK，同时通知自己相应的应用程序：对方要求关闭连接（先发送ACK的目的是为了防止在这段时间内，对方重传FIN报文段）。
    第三步，主机B的应用程序告诉TCP：我要彻底的关闭连接，TCP向主机A送一个FIN报文段。
    第四步，主机A收到这个FIN报文段后，向主机B发送一个ACK表示连接彻底释放。
19.多线程、Socket、I/O